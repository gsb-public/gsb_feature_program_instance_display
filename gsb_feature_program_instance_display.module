<?php
/**
 * @file
 * Code for the GSB Feature Program Instance Display feature.
 */

include_once 'gsb_feature_program_instance_display.features.inc';
/**
 * Implementation of hook_form_FORM_ID_alter()
 *
 * Provides customizations to the views content type settings form
 */

function gsb_feature_program_instance_display_form_views_content_views_panes_content_type_edit_form_alter(&$form, &$form_state, $form_id) {

  if (in_array($form_state['subtype_name'], array('ee_programs-upcoming_deadlines' , 'ee_programs-upcoming_programs'))) {
    $conf = $form_state['conf'];
    $form['override_title_text']['#field_prefix'] = '<label for="override-title-textfield">Title <span class="form-required">*</span></label>';
    if ($form_state['subtype_name'] == 'ee_programs-upcoming_deadlines') {

    $form['cta_title'] = array(
      '#title' => t('CTA Title'),
      '#type' => 'textfield',
      '#weight' => -97,
      '#default_value' => !empty($conf['cta_title']) ? $conf['cta_title'] : '',
    );
    $form['cta_url'] = array(
      '#title' => t('CTA URL'),
      '#type' => 'textfield',
      '#weight' => -97,
      '#default_value' => !empty($conf['cta_url']) ? $conf['cta_url'] : '',
    );
    }
    if ($form_state['subtype_name'] == 'ee_programs-upcoming_programs') {
      $view_modes = $form['view_mode']['#options'];
      foreach($view_modes as $key=>$value) {
        if($key !== 'compact' AND $key !== 'expanded'){
          unset($form['view_mode']['#options'][$key]);
        }
      }
      $form['cta_url'] = array(
        '#title' => t('CTA URL'),
        '#type' => 'textfield',
        '#weight' => -97,
        '#default_value' => !empty($conf['cta_url']) ? $conf['cta_url'] : '',
      );
      $form['cta_title'] = array(
        '#title' => t('CTA Title'),
        '#type' => 'textfield',
        '#weight' => -97,
        '#default_value' => !empty($conf['cta_title']) ? $conf['cta_title'] : '',
      );
      $form['override_title']['#weight'] = -100;
      $form['items_per_page']['#weight'] = -99 ;
      $form['view_mode']['#weight'] = -98;
      $form['program_superhead'] = array(
        '#title' => t('Superhead'),
        '#type' => 'textfield',
        '#weight' => -299,
        '#default_value' => !empty($conf['program_superhead']) ? $conf['program_superhead'] : '',
      );
      $form['overlay_color'] = array(
        '#title' => t('Overlay color'),
        '#type' => 'select',
        '#options' => array('taupe' => 'Taupe' , 'teal' => 'Teal'),
        '#weight' => -98,
        '#default_value' => !empty($conf['overlay_color']) ? $conf['overlay_color'] : '',
      );
      $form['open_new_window'] = array(
        '#title' => t('Open URL in a New Window'),
        '#type' => 'checkbox',
        '#weight' => -96,
        '#default_value' => !empty($conf['open_new_window']) ? $conf['open_new_window'] : '',
      );
      $form['exposed']['#weight'] = -95;
      $form['comments']['#access'] = FALSE;
      $form['links']['#access'] = FALSE;
    }
    $form['#validate'][] = 'gsb_feature_program_instance_display_form_validate';
    $form['#submit'][] = 'gsb_feature_program_instance_display_form_submit';
    return $form;

  }

}

function gsb_feature_program_instance_display_form_validate($form, &$form_state) {
  if ($form_state['values']['override_title_text'] == '') {
    form_set_error('override_title_text', t('Title is required.'));
  }
  if ($form_state['values']['cta_title'] != '' && $form_state['values']['cta_url'] == '') {
    form_set_error('cta_url', t('CTA Url is required.'));
  }
  if ($form_state['values']['cta_title'] == '' && $form_state['values']['cta_url'] != '') {
    form_set_error('cta_title', t('CTA title is required.'));
  }
}

function gsb_feature_program_instance_display_form_submit($form, &$form_state) {
  $form_state['conf']['cta_url'] = $form_state['values']['cta_url'];
  $form_state['conf']['cta_title'] = $form_state['values']['cta_title'];
  if ($form_state['subtype_name'] == 'ee_programs-upcoming_programs') {
    $form_state['conf']['program_superhead'] = $form_state['values']['program_superhead'];
    $form_state['conf']['overlay_color'] = $form_state['values']['overlay_color'];
    $form_state['conf']['open_new_window'] = $form_state['values']['open_new_window'];
  }
}

function gsb_feature_program_instance_display_panels_pane_content_alter($content, $pane, $args, $context) {

  if ($content && $content->subtype == 'ee_programs-upcoming_deadlines') {
    if (!empty($pane->configuration['cta_title'])) {
      $url_parts = drupal_parse_url($pane->configuration['cta_url']);
      $url_parts['html'] = TRUE;
      $content->content['#markup'] .= '<div class="list-cta">' . l($pane->configuration['cta_title'], $url_parts['path'], $url_parts) . '</div>';
    }
  }
  if ($content && $content->subtype == 'ee_programs-upcoming_programs') {
    $content->title_heading = 'div';
    $content->title = '<h2>' . $content->title . '</h2>';
    if (!empty($pane->configuration['program_superhead'])) {
      $content->title = '<div class="super-head">' . $pane->configuration['program_superhead']. '</div>' . $content->title;
    }
    //$content->title['#prefix'] = '<div class="teal">';
    if (!empty($pane->configuration['cta_title'])) {
      $url_parts = drupal_parse_url($pane->configuration['cta_url']);
      $url_parts['html'] = TRUE;
        if ($pane->configuration['open_new_window'] == 1) {
          $url_parts['attributes'] = array('target' => '_blank');
        }
      $content->content['#markup'] .= '<div class="list-cta">' . l($pane->configuration['cta_title'], $url_parts['path'], $url_parts) . '</div>';
    }
    if (!empty($pane->configuration['overlay_color'])) {
      $content->css_class = $pane->configuration['overlay_color'];
    }
  }
}



/**

 * Implements hook_module_implements_alter().

 */

function gsb_feature_program_instance_display_module_implements_alter(&$implementations, $hook) {

  if (in_array($hook, array('form_alter', 'menu_alter'))) {
    // Allow gsb_feature_program_instance_display_form_views_content_views_panes_content_type_edit_form_alter to run last.
    if (isset($implementations['gsb_feature_program_instance_display'])) {
      $group = $implementations['gsb_feature_program_instance_display'];
      unset($implementations['gsb_feature_program_instance_display']);
      $implementations['gsb_feature_program_instance_display'] = $group;
    }
  }
}

